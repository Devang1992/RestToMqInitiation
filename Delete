import com.fasterxml.jackson.databind.ObjectMapper;
import com.fasterxml.jackson.databind.SerializationConfig;
import org.junit.jupiter.api.Test;

import static org.junit.jupiter.api.Assertions.*;

class JacksonConfigTest {

    @Test
    void testCustomObjectMapperConfiguration() throws Exception {
        // Create a clean ObjectMapper
        ObjectMapper objectMapper = new ObjectMapper();
        
        // Create an instance of your config class
        JacksonConfig jacksonConfig = new JacksonConfig();
        
        // Manually inject the ObjectMapper
        jacksonConfig.objectMapper = objectMapper;
        
        // Call the configuration method
        jacksonConfig.customizeObjectMapper();
        
        // Create a test object with the dummy property
        TestBean testBean = new TestBean();
        testBean.setDummyProperty("should be filtered");
        testBean.setNormalProperty("should be included");
        
        // Serialize the object
        String json = objectMapper.writeValueAsString(testBean);
        
        // Verify the filtering worked
        assertFalse(json.contains("dummyProperty"), "Should not contain dummyProperty");
        assertTrue(json.contains("normalProperty"), "Should contain normalProperty");
        assertTrue(json.contains("should be included"), "Should contain the normal property value");
    }
    
    // Simple test bean class
    static class TestBean {
        private String dummyProperty;
        private String normalProperty;
        
        public String getDummyProperty() { return dummyProperty; }
        public void setDummyProperty(String dummyProperty) { this.dummyProperty = dummyProperty; }
        
        public String getNormalProperty() { return normalProperty; }
        public void setNormalProperty(String normalProperty) { this.normalProperty = normalProperty; }
    }
}
