1. Kafka Examples by fhussonnois

Description: This repository contains small examples demonstrating Kafka Producer/Consumer API and Kafka Streams features. It includes examples of implementing custom producer and consumer interceptors.

Key Features:

ProducerWithInterceptor: Demonstrates how to implement a custom producer interceptor to track all records being sent.

ConsumerWithInterceptor: Demonstrates how to implement a custom consumer interceptor to track all records being fetched.

Link: fhussonnois/kafka-examples
GitHub

ðŸ§° Generic Kafka Producer-Consumer Libraries
2. JCGenericKafka by jsoft88

Description: A generic Kafka producer-consumer Java library that allows creating custom producers and consumers by extending base abstract classes. This approach offers faster implementation and better customization compared to high-level consumer classes.

Key Features:

Based on SimpleConsumer class, providing more control over partition consumption.

Facilitates custom implementations tailored to specific needs.

Link: jsoft88/JCGenericKafka
GitHub

ðŸš€ Simple Kafka Producer and Consumer Examples
3. Kafka Example by thejasbabu

Description: A straightforward Kafka Consumer and Producer example demonstrating the basics of producing and consuming messages.

Key Features:

Step-by-step instructions to run the project.

Manual topic creation and message production/consumption.

Link: thejasbabu/kafka-example
GitHub
+2
GitHub
+2
GitHub
+2
GitHub

4. Kafka Java Get Started by isaccanedo
Description: Java-based examples demonstrating how to use Kafka Consumer, Producer, and Streaming APIs.
Key Features:
Includes separate projects for Producer-Consumer and Streaming.
Demonstrates integration with Kafka on HDInsight cluster.
Link: isaccanedo/kafka-java-get-started



https://github.com/jonathan-foucher/spring-boot-kafka-json-example

https://github.com/nks067/Spring-Boot-Kafka

https://github.com/lydtechconsulting/kafka-springboot-consume-produce




https://github.com/ayortanli/kafka-with-springboot

https://github.com/thepracticaldeveloper/kafka-spring-boot-example

https://github.com/Yogeshk4124/Kafka-Spring-Boot-Application


docker run -d \
  --name kafka \
  -p 9092:9092 \
  -e KAFKA_NODE_ID=1 \
  -e KAFKA_PROCESS_ROLES='broker,controller' \
  -e KAFKA_CONTROLLER_QUORUM_VOTERS='1@kafka:29093' \
  -e KAFKA_LISTENERS='PLAINTEXT://kafka:29092,CONTROLLER://kafka:29093,PLAINTEXT_HOST://0.0.0.0:9092' \
  -e KAFKA_ADVERTISED_LISTENERS='PLAINTEXT://kafka:29092,PLAINTEXT_HOST://localhost:9092' \
  -e KAFKA_CONTROLLER_LISTENER_NAMES='CONTROLLER' \
  -e KAFKA_INTER_BROKER_LISTENER_NAME='PLAINTEXT' \
  -e KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR=1 \
  -e KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR=1 \
  -e KAFKA_TRANSACTION_STATE_LOG_MIN_ISR=1 \
  -e KAFKA_LOG_DIRS='/tmp/kraft-combined-logs' \
  -e KAFKA_AUTO_CREATE_TOPICS_ENABLE='true' \
  -e CLUSTER_ID='MkU3OEVBNTcwNTJENDM2Qk' \


https://github.com/CloudKarafka/springboot-kafka-example
https://github.com/athrocks/Spring-Apache-Kafka
